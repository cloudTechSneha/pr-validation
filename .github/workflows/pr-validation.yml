name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, edited, reopened, synchronize]

permissions:
  pull-requests: read
  issues: write
  contents: read

jobs:
  # -----------------
  # 1) Python CI Job
  # -----------------
  python-ci:
    name: Python CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python-pr-validation/requirements.txt

      - name: Lint with flake8
        run: |
          flake8 python-pr-validation

      - name: Check formatting with black
        run: black --check python-pr-validation

      - name: Run tests
        run: pytest python-pr-validation/tests

  # -----------------
  # 2) SonarCloud Scan
  # -----------------
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17 (required for SonarCloud)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python-pr-validation/requirements.txt

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=cloudtechsneha_pr-validation-main
            -Dsonar.organization=cloudtechsneha
            -Dsonar.sources=python-pr-validation/my_project
            -Dsonar.tests=python-pr-validation/tests
            -Dsonar.python.version=3.10

  # -----------------
  # 3) PR Policy Job
  # -----------------
  pr-policy:
    name: PR Policy Enforcement
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title/description for ticket ID
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const number = context.issue.number;
            const { data: pr } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number
            });

            const ticketPattern = /TASK-\d+/;
            if (!ticketPattern.test(pr.title) && !ticketPattern.test(pr.body)) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body: "ðŸš« **PR must include a ticket ID like `TASK-123` in the title or description.**"
              });
              core.setFailed("Missing ticket ID");
            } else {
              console.log("âœ… Ticket ID found");
            }
